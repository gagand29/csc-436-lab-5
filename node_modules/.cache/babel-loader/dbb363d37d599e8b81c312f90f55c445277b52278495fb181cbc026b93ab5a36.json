{"ast":null,"code":"var _jsxFileName = \"/Users/gagg/Desktop/todo final/src/components/TodoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// TodoContext.js\nimport React, { createContext, useReducer, useContext } from 'react';\n\n// Define the initial state for todos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [];\n\n// Create a context for the todos and the dispatch function\nconst TodoContext = /*#__PURE__*/createContext();\n\n// Define a provider component to wrap the entire app with the context\nexport const TodoProvider = ({\n  children\n}) => {\n  _s();\n  // Use the useReducer hook to manage the state and actions for todos\n  const [todos, dispatch] = useReducer(todoReducer, initialTodos);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todos,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to easily access the TodoContext from any component\n_s(TodoProvider, \"u4TrVHogQ4fo59FxNWf+bVaAFRg=\");\n_c = TodoProvider;\nexport const useTodoContext = () => {\n  _s2();\n  const context = useContext(TodoContext);\n  if (!context) {\n    throw new Error('useTodoContext must be used within a TodoProvider');\n  }\n  return context;\n};\n\n// Todo reducer function (unchanged)\n_s2(useTodoContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    // ... other cases\n    case 'TOGGLE_COMPLETE':\n      // Toggle the complete field and set the dateCompleted field\n      return state.map(todo => todo.id === action.payload ? {\n        ...todo,\n        complete: !todo.complete,\n        dateCompleted: new Date()\n      } : todo);\n    // ... other cases\n    default:\n      return state;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsxDEV","_jsxDEV","initialTodos","TodoContext","TodoProvider","children","_s","todos","dispatch","todoReducer","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTodoContext","_s2","context","Error","state","action","type","map","todo","id","payload","complete","dateCompleted","Date","$RefreshReg$"],"sources":["/Users/gagg/Desktop/todo final/src/components/TodoContext.js"],"sourcesContent":["// TodoContext.js\nimport React, { createContext, useReducer, useContext } from 'react';\n\n// Define the initial state for todos\nconst initialTodos = [];\n\n// Create a context for the todos and the dispatch function\nconst TodoContext = createContext();\n\n// Define a provider component to wrap the entire app with the context\nexport const TodoProvider = ({ children }) => {\n  // Use the useReducer hook to manage the state and actions for todos\n  const [todos, dispatch] = useReducer(todoReducer, initialTodos);\n\n  return (\n    <TodoContext.Provider value={{ todos, dispatch }}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\n// Custom hook to easily access the TodoContext from any component\nexport const useTodoContext = () => {\n  const context = useContext(TodoContext);\n  if (!context) {\n    throw new Error('useTodoContext must be used within a TodoProvider');\n  }\n  return context;\n};\n\n// Todo reducer function (unchanged)\nfunction todoReducer(state, action) {\n    switch (action.type) {\n      // ... other cases\n      case 'TOGGLE_COMPLETE':\n        // Toggle the complete field and set the dateCompleted field\n        return state.map((todo) =>\n          todo.id === action.payload\n            ? { ...todo, complete: !todo.complete, dateCompleted: new Date() }\n            : todo\n        );\n      // ... other cases\n      default:\n        return state;\n    }\n  }\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,EAAE;;AAEvB;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,UAAU,CAACW,WAAW,EAAEP,YAAY,CAAC;EAE/D,oBACED,OAAA,CAACE,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAT,EAAA,CAXaF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAYzB,OAAO,MAAMa,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAGpB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,GAAA,CARaD,cAAc;AAS3B,SAASR,WAAWA,CAACY,KAAK,EAAEC,MAAM,EAAE;EAChC,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA,KAAK,iBAAiB;MACpB;MACA,OAAOF,KAAK,CAACG,GAAG,CAAEC,IAAI,IACpBA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,GACtB;QAAE,GAAGF,IAAI;QAAEG,QAAQ,EAAE,CAACH,IAAI,CAACG,QAAQ;QAAEC,aAAa,EAAE,IAAIC,IAAI,CAAC;MAAE,CAAC,GAChEL,IACN,CAAC;IACH;IACA;MACE,OAAOJ,KAAK;EAChB;AACF;AAAC,IAAAL,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}